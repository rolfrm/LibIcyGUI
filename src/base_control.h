// This file is auto generated by table_compiler
#include "icydb.h"
typedef struct _base_control{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const icy_control * k1, const icy_control * k2);
  const size_t sizes[2];

  icy_control * sub;
  icy_control * super;
  icy_mem * sub_area;
  icy_mem * super_area;
}base_control;

base_control * base_control_create(const char * optional_name);
void base_control_set(base_control * table, icy_control sub, icy_control super);
void base_control_insert(base_control * table, icy_control * sub, icy_control * super, size_t count);
void base_control_lookup(base_control * table, icy_control * keys, size_t * out_indexes, size_t count);
void base_control_remove(base_control * table, icy_control * keys, size_t key_count);
void base_control_clear(base_control * table);
void base_control_unset(base_control * table, icy_control key);
bool base_control_try_get(base_control * table, icy_control * sub, icy_control * super);
void base_control_print(base_control * table);
size_t base_control_iter(base_control * table, icy_control * keys, size_t keycnt, icy_control * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
